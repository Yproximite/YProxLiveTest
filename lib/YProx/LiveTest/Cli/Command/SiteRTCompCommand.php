<?php

namespace YProx\LiveTest\Cli\Command;

use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;

use YProx\LiveTest\SiteParser;

class SiteRTCompCommand extends Command
{
    protected function configure()
    {
        $this->addArgument('sitelinkfile', InputArgument::REQUIRED, 'List of links to compare as generated by generateSiteLinkFile');
        $this->addArgument('outfile', InputArgument::REQUIRED);
        $this->addArgument('baseUrl1', InputArgument::REQUIRED);
        $this->addArgument('baseUrl2', InputArgument::REQUIRED);
        $this->setName('test:regression:response-time');
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $linkFile = $input->getArgument('sitelinkfile');
        $outfile = $input->getArgument('outfile');
        $baseUrl1 = $input->getArgument('baseUrl1');
        $baseUrl2 = $input->getArgument('baseUrl2');
        $this->output = $output;

        if (!file_exists($linkFile)) {
            $output->writeln('<error>Link file "'.$linkFile.'" does not exist</error>');
            exit(1);
        }

        $fh = fopen($linkFile, 'r');

        while ($line = fgets($fh)) {
            $line = str_replace("\n", "", $line);
            $ret = $this->getResponseTime($baseUrl1, $line);
            $ret = $this->getResponseTime($baseUrl2, $line);
            $this->output->writeln('');
        }
    }

    protected function getResponseTime($baseUrl, $url)
    {
        $curl = 'curl -o /dev/null -s -w %{time_connect}:%{time_starttransfer}:%{time_total} ';
        $command = $curl.$baseUrl.'/'.$url;
        exec($command, $outlines);
        $res = implode("\n", $outlines);

        $res = explode(':', $res);

        $this->output->writeln(sprintf('%s <info>%s</info>', $this->formatOutput($res), $baseUrl.'/'.$url));

        return $res;
    }

    protected function formatOutput($res)
    {
        return sprintf('con: %5s, tra: %5s, tot: %5s', $res[0], $res[1], $res[2]);
    }
}

